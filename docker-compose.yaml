version: '3.8'
services:
  main:
    container_name: Serve
    build:
      context: .
      dockerfile: Dockerfile
    # command: 'php artisan serve --host=0.0.0.0 --port=443'
    working_dir: /var/www
    volumes:
      - ./:/var/www
      #  - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    ports:
      - 8000:8000
    networks:
      - laravel-network

  queue:
    container_name: Queue
    build:
      context: .
      dockerfile: Dockerfile
    command: 'php artisan queue:work'
    depends_on:
      - db

  db:
    platform: linux/x86_64
    image: mysql:8.0
    container_name: Database
    environment:
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_ROOT: "root"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - db:/var/lib/mysql
    ports:
      - 3306:3306

  # fe:
  #   build:
  #     context: Frontend
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     # For development:
  #     - '0.0.0.0:3000:3000'
  #     # # For production:
  #     #   - '0.0.0.0:3000:80'
  #   command: 'yarn start --host 0.0.0.0'
  #   volumes:
  #   #   # For development:
  #   # - './frontend:/fe'
  #   # - '/fe/node_modules'
  #     # For production:
  #     - './frontend/build:/usr/share/nginx/html'
  #   environment:
  #     # - HTTPS=true
  #     - NODE_ENV=development
  #     # - CHOKIDAR_USEPOLLING=true   # Enable polling for file changes
  #   networks:
  #     - laravel-network

  nginx:
    image: nginx:latest
    container_name: Nginx
    ports:
      - '443:443'
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:rw
      - ./nginx/ssl:/etc/nginx/ssl
      # For production:
      - './frontend/build:/usr/share/nginx/html'
    depends_on:
      - main
      # - fe
    networks:
      - laravel-network

networks:
  laravel-network:
    driver: bridge

volumes:
  db:
    driver: local
